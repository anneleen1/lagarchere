{"ast":null,"code":"var _jsxFileName = \"/Users/Anneleen/Sites/lagarchere/components/DatePicker.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport DateRangePicker from \"react-daterange-picker\";\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\nimport originalMoment from \"moment\";\nimport { extendMoment } from \"moment-range\";\nconst moment = extendMoment(originalMoment);\nconst stateDefinitions = {\n  available: {\n    color: null,\n    label: 'Available'\n  },\n  enquire: {\n    color: '#ffd200',\n    label: 'Enquire'\n  },\n  unavailable: {\n    selectable: false,\n    color: '#78818b',\n    label: 'Unavailable'\n  }\n};\nconst dateRanges = [{\n  state: 'enquire',\n  range: moment.range(moment().add(2, 'weeks').subtract(5, 'days'), moment().add(2, 'weeks').add(6, 'days'))\n}, {\n  state: 'unavailable',\n  range: moment.range(moment().add(3, 'weeks'), moment().add(3, 'weeks').add(5, 'days'))\n}];\n\nclass DatePicker extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    _defineProperty(this, \"onSelect\", (value, states) => {\n      this.setState({\n        value,\n        states\n      });\n    });\n\n    _defineProperty(this, \"onToggle\", () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    });\n\n    _defineProperty(this, \"renderSelectionValue\", () => {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, this.state.value.start.format(\"DD-MM-YYYY\"), \" - \", this.state.value.end.format(\"DD-MM-YYYY\"));\n    });\n\n    const today = moment();\n    this.state = {\n      value: moment.range(today.clone(), today.clone())\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, __jsx(DateRangePicker, {\n      value: this.state.value,\n      onSelect: this.onSelect,\n      singleDateRange: true,\n      numberOfCalendars: 2,\n      selectionType: \"range\",\n      minimumDate: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, this.renderSelectionValue()));\n  }\n\n}\n\nexport default DatePicker;","map":{"version":3,"sources":["/Users/Anneleen/Sites/lagarchere/components/DatePicker.js"],"names":["React","DateRangePicker","originalMoment","extendMoment","moment","stateDefinitions","available","color","label","enquire","unavailable","selectable","dateRanges","state","range","add","subtract","DatePicker","Component","constructor","props","context","value","states","setState","isOpen","start","format","end","today","clone","render","onSelect","Date","renderSelectionValue"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DateRangePicker from \"react-daterange-picker\";\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\nimport originalMoment from \"moment\";\nimport { extendMoment } from \"moment-range\";\nconst moment = extendMoment(originalMoment);\n\n\nconst stateDefinitions = {\n  available: {\n    color: null,\n    label: 'Available',\n  },\n  enquire: {\n    color: '#ffd200',\n    label: 'Enquire',\n  },\n  unavailable: {\n    selectable: false,\n    color: '#78818b',\n    label: 'Unavailable',\n  },\n};\n\nconst dateRanges = [\n  {\n    state: 'enquire',\n    range: moment.range(\n      moment().add(2, 'weeks').subtract(5, 'days'),\n      moment().add(2, 'weeks').add(6, 'days')\n    ),\n  },\n  {\n    state: 'unavailable',\n    range: moment.range(\n      moment().add(3, 'weeks'),\n      moment().add(3, 'weeks').add(5, 'days')\n    ),\n  },\n];\n\nclass DatePicker extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    const today = moment();\n    this.state = {\n      value: moment.range(today.clone(), today.clone())\n    };\n  }\n\n  onSelect = (value, states) => {\n    this.setState({ value, states });\n  };\n\n  onToggle = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  renderSelectionValue = () => {\n    return (\n      <div>\n        {this.state.value.start.format(\"DD-MM-YYYY\")}\n        {\" - \"}\n        {this.state.value.end.format(\"DD-MM-YYYY\")}\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n          <DateRangePicker\n            value={this.state.value}\n            onSelect={this.onSelect}\n            singleDateRange={true}\n            numberOfCalendars={2}\n            selectionType='range'\n            minimumDate={new Date()}\n\n            />\n          <div>{this.renderSelectionValue()}</div>\n      </div>\n    );\n  }\n}\n\nexport default DatePicker;\n"]},"metadata":{},"sourceType":"module"}