{"ast":null,"code":"var _jsxFileName = \"/Users/Anneleen/Sites/lagarchere/components/DatePicker.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport DateRangePicker from \"react-daterange-picker\";\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\nimport originalMoment from \"moment\";\nimport { extendMoment } from \"moment-range\";\nconst moment = extendMoment(originalMoment);\n\nfunction DatePicker() {\n  const today = moment();\n  const {\n    0: value,\n    1: setValue\n  } = useState(moment.range(today.clone(), today.clone()));\n\n  onSelect = (value, states) => {\n    this.setState({\n      value,\n      states\n    });\n  };\n\n  const renderSelectionValue = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, this.state.value.start.format(\"DD-MM-YYYY\"), \" - \", this.state.value.end.format(\"DD-MM-YYYY\"));\n  };\n\n  const stateDefinitions = {\n    available: {\n      color: null,\n      label: 'Beschikbaar'\n    },\n    unavailable: {\n      selectable: false,\n      color: '#78818b',\n      label: 'Gereserveerd'\n    }\n  };\n  const dateRanges = [{\n    state: 'unavailable',\n    range: moment.range(new Date(2020, 6, 20), new Date(2020, 6, 23))\n  }];\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(DateRangePicker, {\n    value: value,\n    onSelect: onSelect,\n    singleDateRange: true,\n    numberOfCalendars: 2,\n    selectionType: \"range\",\n    minimumDate: new Date(),\n    showLegend: true,\n    stateDefinitions: stateDefinitions,\n    dateStates: dateRanges,\n    defaultState: \"available\",\n    locale: moment().locale('nl'),\n    firstOfWeek: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, this.renderSelectionValue()));\n}\n\nexport default DatePicker;","map":{"version":3,"sources":["/Users/Anneleen/Sites/lagarchere/components/DatePicker.js"],"names":["React","useState","DateRangePicker","originalMoment","extendMoment","moment","DatePicker","today","value","setValue","range","clone","onSelect","states","setState","renderSelectionValue","state","start","format","end","stateDefinitions","available","color","label","unavailable","selectable","dateRanges","Date","locale"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAO,oDAAP;AACA,OAAOC,cAAP,MAA2B,QAA3B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,MAAMC,MAAM,GAAGD,YAAY,CAACD,cAAD,CAA3B;;AAEA,SAASG,UAAT,GAAqB;AACnB,QAAMC,KAAK,GAAGF,MAAM,EAApB;AACA,QAAM;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAACI,MAAM,CAACK,KAAP,CAAaH,KAAK,CAACI,KAAN,EAAb,EAA4BJ,KAAK,CAACI,KAAN,EAA5B,CAAD,CAAlC;;AAEAC,EAAAA,QAAQ,GAAG,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AAC5B,SAAKC,QAAL,CAAc;AAAEN,MAAAA,KAAF;AAASK,MAAAA;AAAT,KAAd;AACD,GAFD;;AAIA,QAAME,oBAAoB,GAAG,MAAM;AACjC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWR,KAAX,CAAiBS,KAAjB,CAAuBC,MAAvB,CAA8B,YAA9B,CADH,EAEG,KAFH,EAGG,KAAKF,KAAL,CAAWR,KAAX,CAAiBW,GAAjB,CAAqBD,MAArB,CAA4B,YAA5B,CAHH,CADF;AAOD,GARD;;AAUA,QAAME,gBAAgB,GAAG;AACvBC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,KAAK,EAAE;AAFE,KADY;AAKvBC,IAAAA,WAAW,EAAE;AACXC,MAAAA,UAAU,EAAE,KADD;AAEXH,MAAAA,KAAK,EAAE,SAFI;AAGXC,MAAAA,KAAK,EAAE;AAHI;AALU,GAAzB;AAYA,QAAMG,UAAU,GAAG,CACjB;AACEV,IAAAA,KAAK,EAAE,aADT;AAEEN,IAAAA,KAAK,EAAEL,MAAM,CAACK,KAAP,CAAa,IAAIiB,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAb,EAAoC,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAApC;AAFT,GADiB,CAAnB;AAOE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD;AACE,IAAA,KAAK,EAAEnB,KADT;AAEE,IAAA,QAAQ,EAAEI,QAFZ;AAGE,IAAA,eAAe,EAAE,IAHnB;AAIE,IAAA,iBAAiB,EAAE,CAJrB;AAKE,IAAA,aAAa,EAAC,OALhB;AAME,IAAA,WAAW,EAAE,IAAIe,IAAJ,EANf;AAOE,IAAA,UAAU,EAAE,IAPd;AAQE,IAAA,gBAAgB,EAAEP,gBARpB;AASE,IAAA,UAAU,EAAEM,UATd;AAUE,IAAA,YAAY,EAAC,WAVf;AAWE,IAAA,MAAM,EAAErB,MAAM,GAAGuB,MAAT,CAAgB,IAAhB,CAXV;AAYE,IAAA,WAAW,EAAE,CAZf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,KAAKb,oBAAL,EAAN,CAfJ,CADF;AAoBH;;AAED,eAAeT,UAAf","sourcesContent":["import React, {useState} from \"react\";\nimport DateRangePicker from \"react-daterange-picker\";\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\nimport originalMoment from \"moment\";\nimport { extendMoment } from \"moment-range\";\nconst moment = extendMoment(originalMoment);\n\nfunction DatePicker(){\n  const today = moment();\n  const [value, setValue] = useState(moment.range(today.clone(), today.clone()))\n  \n  onSelect = (value, states) => {\n    this.setState({ value, states });\n  };\n\n  const renderSelectionValue = () => {\n    return (\n      <div>\n        {this.state.value.start.format(\"DD-MM-YYYY\")}\n        {\" - \"}\n        {this.state.value.end.format(\"DD-MM-YYYY\")}\n      </div>\n    );\n  };\n\n  const stateDefinitions = {\n    available: {\n      color: null,\n      label: 'Beschikbaar',\n    },\n    unavailable: {\n      selectable: false,\n      color: '#78818b',\n      label: 'Gereserveerd',\n    },\n  };\n  \n  const dateRanges = [\n    {\n      state: 'unavailable',\n      range: moment.range(new Date(2020, 6, 20), new Date(2020, 6, 23)),\n    },\n  ];\n\n    return (\n      <div>\n          <DateRangePicker\n            value={value}\n            onSelect={onSelect}\n            singleDateRange={true}\n            numberOfCalendars={2}\n            selectionType='range'\n            minimumDate={new Date()}\n            showLegend={true}\n            stateDefinitions={stateDefinitions}\n            dateStates={dateRanges}\n            defaultState=\"available\"\n            locale={moment().locale('nl')}\n            firstOfWeek={1}\n            />\n          <div>{this.renderSelectionValue()}</div>\n      </div>\n    );\n  \n}\n\nexport default DatePicker;\n"]},"metadata":{},"sourceType":"module"}