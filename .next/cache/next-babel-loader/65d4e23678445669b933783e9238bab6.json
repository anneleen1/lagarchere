{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Anneleen/Sites/lagarchere/components/DatePicker.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport DateRangePicker from \"react-daterange-picker\";\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\nimport originalMoment from \"moment\";\nimport { extendMoment } from \"moment-range\";\nvar moment = extendMoment(originalMoment);\n\nvar DatePicker = /*#__PURE__*/function (_React$Component) {\n  _inherits(DatePicker, _React$Component);\n\n  var _super = _createSuper(DatePicker);\n\n  function DatePicker(props, context) {\n    var _this;\n\n    _classCallCheck(this, DatePicker);\n\n    _this = _super.call(this, props, context);\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelect\", function (value, states) {\n      _this.setState({\n        value: value,\n        states: states\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggle\", function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderSelectionValue\", function () {\n      return __jsx(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, \"Selection\"), _this.state.value.start.format(\"DD-MM-YYYY\"), \" - \", _this.state.value.end.format(\"DD-MM-YYYY\"));\n    });\n\n    var today = moment();\n    _this.state = {\n      isOpen: false,\n      value: moment.range(today.clone(), today.clone())\n    };\n    return _this;\n  }\n\n  _createClass(DatePicker, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, __jsx(DateRangePicker, {\n        value: this.state.value,\n        onSelect: this.onSelect,\n        singleDateRange: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }\n      }, this.renderSelectionValue()));\n    }\n  }]);\n\n  return DatePicker;\n}(React.Component);\n\nexport default DatePicker;","map":{"version":3,"sources":["/Users/Anneleen/Sites/lagarchere/components/DatePicker.js"],"names":["React","DateRangePicker","originalMoment","extendMoment","moment","DatePicker","props","context","value","states","setState","isOpen","state","start","format","end","today","range","clone","onSelect","renderSelectionValue","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAO,oDAAP;AACA,OAAOC,cAAP,MAA2B,QAA3B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,IAAMC,MAAM,GAAGD,YAAY,CAACD,cAAD,CAA3B;;IAEMG,U;;;;;AACJ,sBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AAC1B,8BAAMD,KAAN,EAAaC,OAAb;;AAD0B,+DAWjB,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAC5B,YAAKC,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,MAAM,EAANA;AAAT,OAAd;AACD,KAb2B;;AAAA,+DAejB,YAAM;AACf,YAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE,CAAC,MAAKC,KAAL,CAAWD;AAAtB,OAAd;AACD,KAjB2B;;AAAA,2EAmBL,YAAM;AAC3B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEG,MAAKC,KAAL,CAAWJ,KAAX,CAAiBK,KAAjB,CAAuBC,MAAvB,CAA8B,YAA9B,CAFH,EAGG,KAHH,EAIG,MAAKF,KAAL,CAAWJ,KAAX,CAAiBO,GAAjB,CAAqBD,MAArB,CAA4B,YAA5B,CAJH,CADF;AAQD,KA5B2B;;AAG1B,QAAME,KAAK,GAAGZ,MAAM,EAApB;AAEA,UAAKQ,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAE,KADG;AAEXH,MAAAA,KAAK,EAAEJ,MAAM,CAACa,KAAP,CAAaD,KAAK,CAACE,KAAN,EAAb,EAA4BF,KAAK,CAACE,KAAN,EAA5B;AAFI,KAAb;AAL0B;AAS3B;;;;6BAqBQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,MAAC,eAAD;AACE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWJ,KADpB;AAEE,QAAA,QAAQ,EAAE,KAAKW,QAFjB;AAGE,QAAA,eAAe,EAAE,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EASY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKC,oBAAL,EAAN,CATZ,CADF;AAcD;;;;EA9CsBpB,KAAK,CAACqB,S;;AAiD/B,eAAehB,UAAf","sourcesContent":["import React from \"react\";\nimport DateRangePicker from \"react-daterange-picker\";\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\nimport originalMoment from \"moment\";\nimport { extendMoment } from \"moment-range\";\nconst moment = extendMoment(originalMoment);\n\nclass DatePicker extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    const today = moment();\n\n    this.state = {\n      isOpen: false,\n      value: moment.range(today.clone(), today.clone())\n    };\n  }\n\n  onSelect = (value, states) => {\n    this.setState({ value, states });\n  };\n\n  onToggle = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  renderSelectionValue = () => {\n    return (\n      <div>\n        <div>Selection</div>\n        {this.state.value.start.format(\"DD-MM-YYYY\")}\n        {\" - \"}\n        {this.state.value.end.format(\"DD-MM-YYYY\")}\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n\n        \n\n          <DateRangePicker\n            value={this.state.value}\n            onSelect={this.onSelect}\n            singleDateRange={true}\n          />\n                  <div>{this.renderSelectionValue()}</div>\n\n      </div>\n    );\n  }\n}\n\nexport default DatePicker;\n"]},"metadata":{},"sourceType":"module"}