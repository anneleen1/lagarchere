{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/Anneleen/Sites/lagarchere/pages/login.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// import Head from 'next/head'\n// import logoTitleImage from '../images/logo_title.png'\n// import Nav from \"../components/Nav\"\n// import homeImage from '../images/home_main.jpg'\n// import {Form, Formik, Field, ErrorMessage, formikHelpers} from 'formik'\n// import {object, string} from 'yup';\n// import Link from 'next/link'\n// import axios from 'axios';\n// const initialValues = {\n//     username: '',\n//     password: ''\n//   }\n// function Login() {\n//     return (\n//         <div>\n//             <Head>\n//                 <title>La Garchere - login</title>\n//                 <link rel=\"icon\" href={logoTitleImage} type=\"image/icon type\"/>\n//             </Head>\n//             <Nav />\n//             <div className=\"container-login\">\n//                 <img className=\"bg-image\" src={homeImage} alt=\"La GarchÃ¨re kamer\"/>\n//                 <div className=\"container-section\">\n//                     <section className=\"section-login\">\n//                         <h1 className=\"heading-style-2\">Welkom!</h1>\n//                         <Formik \n//                             validationSchema={\n//                                 object({\n//                                 username: string().required(),\n//                                 password: string().required().min(8)\n//                                 })\n//                             }\n//                             initialValues={initialValues} \n//                             onSubmit={(values, formikHelpers)=> {\n//                                 console.log(values)\n//                                 axios.post(\"https://wdev.be/wdev_anneleen/eindwerk/api/\", values)\n//                                 .then(function (response) {\n//                                 console.log(response);\n//                                 })\n//                                 .catch(function (error) {\n//                                 console.log(error);\n//                                 });\n//                             }}>\n//                                 {({values, errors, isSubmitting}) => (\n//                                 <Form className=\"login-form\"> \n//                                     <Field name=\"username\" type=\"email\" placeholder=\"email\" className=\"inputtype-style-2\"></Field>\n//                                     <div>\n//                                     <ErrorMessage name=\"username\"></ErrorMessage>\n//                                     </div>\n//                                     <Field name=\"password\" type=\"password\" placeholder=\"wachtwoord\" className=\"inputtype-style-2\"></Field>\n//                                     <div>\n//                                     <ErrorMessage name=\"password\"></ErrorMessage>\n//                                     </div>\n//                                     <button type=\"submit\" className=\"button-style-3\" disabled={isSubmitting}>Inschrijven</button>\n//                                 </Form>\n//                                 )}\n//                             </Formik>\n//                             <Link href=\"/registratie\"><a>Ik heb nog geen account</a></Link>\n//                     </section>\n//                 </div>   \n//             </div>\n//             <style jsx>{`\n//                 .container-login .bg-image {\n//                     width: 100vw;\n//                     height: 91vh;\n//                     object-fit: cover;\n//                     position: absolute;\n//                     z-index: -1;\n//                 }\n//                 .container-section {\n//                     width: 100vw;\n//                     height: 91vh;\n//                     display: flex;\n//                     align-items: center;\n//                     justify-content: center;\n//                 }\n//                 .section-login {\n//                     background-color: white;\n//                     width: 350px;\n//                     height: 60vh;\n//                     display: flex;\n//                     flex-direction: column;\n//                     align-items: center;\n//                     justify-content: flex-end;\n//                 }\n//                 .container-login button{\n//                     margin: 40px auto 20px auto;\n//                     width: 170px;\n//                 }\n//                 .container-login h1{\n//                     margin-bottom: 20px;\n//                     font-size: 2.8rem;\n//                 }\n//                 .container-login a {\n//                     font-size: 0.8rem;\n//                     border-bottom: 1px solid #1F1F1F;\n//                     margin-bottom: 50px;\n//                 }\n//                 .container-login a:hover {\n//                     border-bottom: 1px solid transparent;\n//                 }\n//                 @media (min-width: 60em) {\n//                     .container-login .bg-image {\n//                         margin-top: -110px;\n//                         height: 100vh;\n//                     }\n//                     .container-section {\n//                         height: 80vh;\n//                     }\n//                 }\n//             `}</style>\n//         </div>\n//     )\n// }\n//   export default Login\nimport React, { useState } from \"react\";\nimport { Formik } from \"formik\";\n\nvar FancyRegistration = function FancyRegistration(props) {\n  _s();\n\n  var _useState = useState(false),\n      _long = _useState[0],\n      longEnough = _useState[1];\n\n  var _useState2 = useState(false),\n      number = _useState2[0],\n      hasNumber = _useState2[1];\n\n  return __jsx(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validate: function validate(values) {\n      values.password.length < 8 ? longEnough(false) : longEnough(true);\n      !/d/.test(values.password) ? hasNumber(false) : hasNumber(true);\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var resetForm = _ref.resetForm,\n          setErrors = _ref.setErrors,\n          setSubmitting = _ref.setSubmitting;\n      var errors = {};\n      if (!_long || !number) errors.password = \"Your password doesn't currently meet the requirements\"; // If the errors object is empty then we've successfully met all the requirements\n\n      if (Object.entries(errors).length === 0 && errors.constructor === Object) {\n        alert(\"Great, we've created an account for \".concat(values.email));\n        resetForm(); // Reset form for the example\n      } else {\n        setErrors(errors);\n      }\n\n      setSubmitting(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var errors = _ref2.errors,\n        values = _ref2.values,\n        handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting;\n    return __jsx(React.Fragment, null, __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, \"Create Your Account\"), __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, \"What's your email address?\"), __jsx(\"input\", {\n      autoFocus: true,\n      id: \"email\",\n      type: \"email\",\n      name: \"email\",\n      onChange: handleChange,\n      required: true,\n      value: values.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, \"What do you want your password to be?\"), __jsx(\"input\", {\n      id: \"password\",\n      type: \"password\",\n      name: \"password\",\n      onChange: handleChange,\n      required: true,\n      value: values.password,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }), errors.password && __jsx(\"label\", {\n      className: \"error\",\n      htmlFor: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, \"Sorry! \", errors.password), __jsx(\"button\", {\n      type: \"submit\",\n      value: \"Create account\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, \"Create account\")));\n  });\n};\n\n_s(FancyRegistration, \"dJvVLQMj+WfXnhiHsZo5Y+s9ZBM=\");\n\n_c = FancyRegistration;\nexport default FancyRegistration;\n\nvar _c;\n\n$RefreshReg$(_c, \"FancyRegistration\");","map":{"version":3,"sources":["/Users/Anneleen/Sites/lagarchere/pages/login.js"],"names":["React","useState","Formik","FancyRegistration","props","long","longEnough","number","hasNumber","email","password","values","length","test","resetForm","setErrors","setSubmitting","errors","Object","entries","constructor","alert","handleChange","handleSubmit","isSubmitting"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAKA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAKA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AAAA;;AAAA,kBACNH,QAAQ,CAAC,KAAD,CADF;AAAA,MAC1BI,KAD0B;AAAA,MACpBC,UADoB;;AAAA,mBAELL,QAAQ,CAAC,KAAD,CAFH;AAAA,MAE1BM,MAF0B;AAAA,MAElBC,SAFkB;;AAKjC,SACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,QAAQ,EAAE;AAAvB,KADjB;AAEE,IAAA,QAAQ,EAAE,kBAAAC,MAAM,EAAI;AAClBA,MAAAA,MAAM,CAACD,QAAP,CAAgBE,MAAhB,GAAyB,CAAzB,GAA6BN,UAAU,CAAC,KAAD,CAAvC,GAAiDA,UAAU,CAAC,IAAD,CAA3D;AACA,OAAC,IAAIO,IAAJ,CAASF,MAAM,CAACD,QAAhB,CAAD,GAA6BF,SAAS,CAAC,KAAD,CAAtC,GAAgDA,SAAS,CAAC,IAAD,CAAzD;AACD,KALH;AAME,IAAA,QAAQ,EAAE,kBAACG,MAAD,QAAqD;AAAA,UAA1CG,SAA0C,QAA1CA,SAA0C;AAAA,UAA/BC,SAA+B,QAA/BA,SAA+B;AAAA,UAApBC,aAAoB,QAApBA,aAAoB;AAC7D,UAAIC,MAAM,GAAG,EAAb;AAEA,UAAI,CAACZ,KAAD,IAAS,CAACE,MAAd,EACEU,MAAM,CAACP,QAAP,GACE,uDADF,CAJ2D,CAO7D;;AACA,UACEQ,MAAM,CAACC,OAAP,CAAeF,MAAf,EAAuBL,MAAvB,KAAkC,CAAlC,IACAK,MAAM,CAACG,WAAP,KAAuBF,MAFzB,EAGE;AACAG,QAAAA,KAAK,+CAAwCV,MAAM,CAACF,KAA/C,EAAL;AACAK,QAAAA,SAAS,GAFT,CAEa;AACd,OAND,MAMO;AACLC,QAAAA,SAAS,CAACE,MAAD,CAAT;AACD;;AAEDD,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAzBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA2BG;AAAA,QAAGC,MAAH,SAAGA,MAAH;AAAA,QAAWN,MAAX,SAAWA,MAAX;AAAA,QAAmBW,YAAnB,SAAmBA,YAAnB;AAAA,QAAiCC,YAAjC,SAAiCA,YAAjC;AAAA,QAA+CC,YAA/C,SAA+CA,YAA/C;AAAA,WACC,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAM,MAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AACE,MAAA,SAAS,MADX;AAEE,MAAA,EAAE,EAAC,OAFL;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,QAAQ,EAAED,YALZ;AAME,MAAA,QAAQ,MANV;AAOE,MAAA,KAAK,EAAEX,MAAM,CAACF,KAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAXF,EAcE;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,QAAQ,EAAEa,YAJZ;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,KAAK,EAAEX,MAAM,CAACD,QANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAsBGO,MAAM,CAACP,QAAP,IACC;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,OAAO,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACUO,MAAM,CAACP,QADjB,CAvBJ,EA2BE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,gBAFR;AAGE,MAAA,QAAQ,EAAEc,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA3BF,CAFF,CADD;AAAA,GA3BH,CADF;AAsED,CA3ED;;GAAMrB,iB;;KAAAA,iB;AA6EN,eAAeA,iBAAf","sourcesContent":["// import Head from 'next/head'\n// import logoTitleImage from '../images/logo_title.png'\n// import Nav from \"../components/Nav\"\n// import homeImage from '../images/home_main.jpg'\n// import {Form, Formik, Field, ErrorMessage, formikHelpers} from 'formik'\n// import {object, string} from 'yup';\n// import Link from 'next/link'\n// import axios from 'axios';\n\n\n// const initialValues = {\n//     username: '',\n//     password: ''\n//   }\n\n// function Login() {\n//     return (\n        \n//         <div>\n//             <Head>\n//                 <title>La Garchere - login</title>\n//                 <link rel=\"icon\" href={logoTitleImage} type=\"image/icon type\"/>\n//             </Head>\n//             <Nav />\n//             <div className=\"container-login\">\n//                 <img className=\"bg-image\" src={homeImage} alt=\"La GarchÃ¨re kamer\"/>\n//                 <div className=\"container-section\">\n//                     <section className=\"section-login\">\n//                         <h1 className=\"heading-style-2\">Welkom!</h1>\n//                         <Formik \n//                             validationSchema={\n//                                 object({\n//                                 username: string().required(),\n//                                 password: string().required().min(8)\n//                                 })\n//                             }\n//                             initialValues={initialValues} \n//                             onSubmit={(values, formikHelpers)=> {\n//                                 console.log(values)\n//                                 axios.post(\"https://wdev.be/wdev_anneleen/eindwerk/api/\", values)\n//                                 .then(function (response) {\n//                                 console.log(response);\n//                                 })\n//                                 .catch(function (error) {\n//                                 console.log(error);\n//                                 });\n                                \n//                             }}>\n//                                 {({values, errors, isSubmitting}) => (\n//                                 <Form className=\"login-form\"> \n//                                     <Field name=\"username\" type=\"email\" placeholder=\"email\" className=\"inputtype-style-2\"></Field>\n//                                     <div>\n//                                     <ErrorMessage name=\"username\"></ErrorMessage>\n//                                     </div>\n//                                     <Field name=\"password\" type=\"password\" placeholder=\"wachtwoord\" className=\"inputtype-style-2\"></Field>\n//                                     <div>\n//                                     <ErrorMessage name=\"password\"></ErrorMessage>\n//                                     </div>\n//                                     <button type=\"submit\" className=\"button-style-3\" disabled={isSubmitting}>Inschrijven</button>\n//                                 </Form>\n//                                 )}\n//                             </Formik>\n//                             <Link href=\"/registratie\"><a>Ik heb nog geen account</a></Link>\n\n//                     </section>\n//                 </div>   \n//             </div>\n//             <style jsx>{`\n//                 .container-login .bg-image {\n//                     width: 100vw;\n//                     height: 91vh;\n//                     object-fit: cover;\n//                     position: absolute;\n//                     z-index: -1;\n//                 }\n\n//                 .container-section {\n//                     width: 100vw;\n//                     height: 91vh;\n//                     display: flex;\n//                     align-items: center;\n//                     justify-content: center;\n//                 }\n\n//                 .section-login {\n//                     background-color: white;\n//                     width: 350px;\n//                     height: 60vh;\n//                     display: flex;\n//                     flex-direction: column;\n//                     align-items: center;\n//                     justify-content: flex-end;\n//                 }\n\n//                 .container-login button{\n//                     margin: 40px auto 20px auto;\n//                     width: 170px;\n//                 }\n\n//                 .container-login h1{\n//                     margin-bottom: 20px;\n//                     font-size: 2.8rem;\n//                 }\n\n//                 .container-login a {\n//                     font-size: 0.8rem;\n//                     border-bottom: 1px solid #1F1F1F;\n//                     margin-bottom: 50px;\n//                 }\n    \n//                 .container-login a:hover {\n//                     border-bottom: 1px solid transparent;\n//                 }\n            \n//                 @media (min-width: 60em) {\n//                     .container-login .bg-image {\n//                         margin-top: -110px;\n//                         height: 100vh;\n//                     }\n\n//                     .container-section {\n//                         height: 80vh;\n//                     }\n//                 }\n\n                \n//             `}</style>\n//         </div>\n//     )\n// }\n  \n//   export default Login\n\n\n\n\nimport React, { useState } from \"react\";\nimport { Formik } from \"formik\";\n\n\n\n\nconst FancyRegistration = props => {\n  const [long, longEnough] = useState(false);\n  const [number, hasNumber] = useState(false);\n\n\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\" }}\n      validate={values => {\n        values.password.length < 8 ? longEnough(false) : longEnough(true);\n        !/d/.test(values.password) ? hasNumber(false) : hasNumber(true);\n      }}\n      onSubmit={(values, { resetForm, setErrors, setSubmitting }) => {\n        let errors = {};\n\n        if (!long || !number)\n          errors.password =\n            \"Your password doesn't currently meet the requirements\";\n\n        // If the errors object is empty then we've successfully met all the requirements\n        if (\n          Object.entries(errors).length === 0 &&\n          errors.constructor === Object\n        ) {\n          alert(`Great, we've created an account for ${values.email}`);\n          resetForm(); // Reset form for the example\n        } else {\n          setErrors(errors);\n        }\n\n        setSubmitting(false);\n      }}\n    >\n      {({ errors, values, handleChange, handleSubmit, isSubmitting }) => (\n        <>\n          <h1>Create Your Account</h1>\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"email\">What's your email address?</label>\n            <input\n              autoFocus\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              required\n              value={values.email}\n            />\n            <label htmlFor=\"password\">\n              What do you want your password to be?\n            </label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              required\n              value={values.password}\n            />\n            {errors.password && (\n              <label className=\"error\" htmlFor=\"password\">\n                Sorry! {errors.password}\n              </label>\n            )}\n            <button\n              type=\"submit\"\n              value=\"Create account\"\n              disabled={isSubmitting}\n            >\n              Create account\n            </button>\n          </form>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default FancyRegistration;"]},"metadata":{},"sourceType":"module"}